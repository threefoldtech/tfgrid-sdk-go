name: proxy Build and lint the source code

on:
  push:
    paths:
      - grid-proxy/**
      - rmb-sdk-go/**
  pull_request:
    types: [opened, reopened, review_requested]
    paths:
      - grid-proxy/**
      - rmb-sdk-go/**

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: grid-proxy
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21

      - name: Build
        run: |
          export PATH=/home/runner/go/bin:$PATH
          export GIT_COMMIT=$(git rev-list -1 HEAD) 
          go build -ldflags "-X main.GitCommit=$GIT_COMMIT" cmds/proxy_server/main.go
        env:
          GO111MODULE: on

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          working-directory: grid-proxy

      - name: Test version
        run: ./main -v

  build-docker:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: grid-proxy
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/threefoldtech/tfgridproxy
          tags: |
            type=semver,pattern={{version}}

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./grid-proxy/Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          #  For workflows triggered by release, `github.ref_name` is the short name for the release tag created.
          build-args: |
            version=${{ github.ref_name	 }}
